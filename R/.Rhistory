demo()
source('~/Desktop/University/94-fall/Probability-and-Statistics/HW2-93105426/src/p7/p71.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
mn
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
2 ^ 10
factorial(5)
source('~/.active-rstudio-document')
landa = 3
p = exp(-landa) * (y ^ i) / factorial(i)
p = exp(-landa) * (landa ^ i) / factorial(i)
source('~/Desktop/University/95-summer/network-science/test.R')
source('~/Desktop/University/95-summer/network-science/test.R')
source('~/Desktop/University/95-summer/network-science/test.R')
source('~/Desktop/University/95-summer/network-science/test.R')
source('~/Desktop/University/95-summer/network-science/test.R')
source('~/Desktop/University/95-summer/network-science/test.R')
source('~/Desktop/University/95-summer/network-science/test.R')
source('~/Desktop/University/95-summer/network-science/test.R')
source('~/Desktop/University/95-summer/network-science/test.R')
source('~/Desktop/University/95-summer/network-science/test.R')
source('~/Desktop/University/95-summer/network-science/e.coli/first.R')
for(i in 1:length(metaboliteIDs)){
}
ms <- list()
cs <- list()
for(i in 1:length(metaboliteIDs)){
p <- bfs(graph=g1, root=i, neimode=c("out"), dist=TRUE)[['dist']]
p <- p[p != 0]
ms[i] <- mean(p)
cs[i] <- length(p)
}
mean(ms)
lapply(ms, mean)
mean(ms[1:1975])
ms[1:1975]
ms[1:1975]
mean(ms[1:1975])
summery(ms)
summary(ms)
ms <- c()
cs <- c()
for(i in 1:length(metaboliteIDs)){
p <- bfs(graph=g1, root=i, neimode=c("out"), dist=TRUE)[['dist']]
p <- p[p != 0]
ms <- c(ms, mean(p))
cs <- c(cs, length(p))
}
mean(ms)
save.image("~/Desktop/University/95-summer/network-science/e.coli/.RData")
source('~/Desktop/University/95-summer/network-science/e.coli/first.R')
plot(x=log(dd), y=log(1:length(dd)))
plot(t=log(dd), x=log(1:length(dd)))
plot(y=log(dd), x=log(1:length(dd)))
plot(y=log(dd), x=log(1:length(dd)) main=
"degree distribution" xlab="Degree", ylab="Distribution")
plot(y=log(dd), x=log(1:length(dd)) main=
"Degree_Distribution" xlab="Degree", ylab="Distribution")
plot(y=log(dd), x=log(1:length(dd)) main="Degree_Distribution" xlab="Degree", ylab="Distribution")
plot(y=log(dd), x=log(1:length(dd)), main="Degree_Distribution" xlab="Degree", ylab="Distribution")
plot(y=log(dd), x=log(1:length(dd)), main="Degree_Distribution", xlab="Degree", ylab="Distribution")
plot(y=log(dd), x=log(1:length(dd)), main="Degree Distribution", xlab="Degree", ylab="Distribution")
plot(y=log(dd), x=log(1:length(dd)), main="Degree Distribution", xlab="Logarithm Degree", ylab="Logarithm Distribution")
plot(y=log(dd), x=log(1:length(dd)), main="Degree Distribution", xlab="Log Degree", ylab="Log Distribution")
bfs(g1, 1, neimode = c("out"))
bfs(g1, 1, neimode = c("out"), dist=TRUE)
p = bfs(g1, 1, neimode = c("out"), dist=TRUE)
p = p[p != 0]
p = bfs(g1, 1, neimode = c("out"), dist=TRUE)['dist']
p = p[p != 0]
p = bfs(g1, 1, neimode = c("out"), dist=TRUE)['dist']
p
p <- p[p != 0]
p = bfs(g1, 1, neimode = c("out"), dist=TRUE)[['dist']
]
p
p <- p[p!=0]
p
h = hist(p)
h
h = hist(p)[['counts']]
h
h = hist(p,breaks=1:10)[['counts']]
h
h2 = hist(p,breaks=1:10)[['counts']]
h = h + h2
h
h = rep(0, 10)
h
for(i in 1:length(gsize(g1))){
p = bfs(g1, i, neimode = c("out"), dist=TRUE)[['dist']]
h2 = hist(p,breaks=1:20)[['counts']]
h = h + h2
}
for(i in 1:length(gsize(g1))){
}
h = rep(0, 10)
h = rep(0, 20)
for(i in 1:length(gsize(g1))){
p = bfs(g1, i, neimode = c("out"), dist=TRUE)[['dist']]
p = p[p != 0]
h2 = hist(p,breaks=1:20)[['counts']]
h = h + h2
}
h
h
h2
h = rep(0, 19)
for(i in 1:length(gsize(g1))){
p = bfs(g1, i, neimode = c("out"), dist=TRUE)[['dist']]
p = p[p != 0]
h2 = hist(p,breaks=1:20)[['counts']]
h = h + h2
}
h
length(gsize(g1))
for(i in 1:gsize(g1)){
p = bfs(g1, i, neimode = c("out"), dist=TRUE)[['dist']]
p = p[p != 0]
h2 = hist(p,breaks=1:20)[['counts']]
h = h + h2
}
h
source('~/Desktop/University/95-summer/network-science/e.coli/distance.R')
gsize(g1)
p = bfs(g1, 7752, neimode = c("out"), dist=TRUE)[['dist']]
p = bfs(g1, 7751, neimode = c("out"), dist=TRUE)[['dist']]
p = bfs(g1, 7700, neimode = c("out"), dist=TRUE)[['dist']]
source('~/Desktop/University/95-summer/network-science/e.coli/distance.R')
h
plot(h)
h[1:6]
h[1:7]
distances = h[1:7]
distances = h[1:8]
plot(distances)
plot(distances, xlab="Path Length", ylab="Count", main="Path length Histogram")
g1
ego_size(g1, 0)
library(igraph)
ego_size(g1, 0)
ego_size(g1, 0, 1:3)
ego(g1, 0)
ego(g1, 0, mode=c("out"))
ego(g1, 0, mode=c("out"))[[1]]
ego(g1, 1, mode=c("out"))[[1]]
ego(g1, 1, mode=c("out"))[[2]]
ego(g1, 1, mode=c("out"))
ego(g1, 1, mode=c("out"))[[1973]][['vertex']]
ego(g1, 1, mode=c("out"))[[1973]]['vertex']
ego(g1, 1, mode=c("out"))[[1973]]
ego(g1, 1, mode=c("out"))[[1973]][1]
ego(g1, 1, mode=c("out"))[[1973]][2]
source('~/Desktop/University/95-summer/network-science/e.coli/coeffition.R')
neighbours <- ego(g1, 1, mode=c("out"))
ccs <- rep(0, length(metaboliteIDs))
nn <- length(neighbours[[10]])
ts <- neighbours[neighbours[[10]][3]]
ts
ts[ts == 7]
ts
ts <- neighbours[[ neighbours[[10]][5] ]]
ts
ts[ts == 26]
source('~/Desktop/University/95-summer/network-science/e.coli/coeffition.R')
debugSource('~/Desktop/University/95-summer/network-science/e.coli/coeffition.R')
ts[ts == 10]
ts[ts == 11]
neighbours[[i]][k]
neighbours[[10]][5]
debugSource('~/Desktop/University/95-summer/network-science/e.coli/coeffition.R')
debugSource('~/Desktop/University/95-summer/network-science/e.coli/coeffition.R')
debugSource('~/Desktop/University/95-summer/network-science/e.coli/coeffition.R')
debugSource('~/Desktop/University/95-summer/network-science/e.coli/coeffition.R')
k
i
neighbours[[1]][2]
neighbours[[1]]
debugSource('~/Desktop/University/95-summer/network-science/e.coli/coeffition.R')
source('~/Desktop/University/95-summer/network-science/e.coli/coeffition.R')
hist(ccs)
hc = hist(ccs)
hc
hist(ccs, breaks=c((0:10) * 10 ))
hist(ccs, breaks=c((0:20) * 30 ))
hist(ccs, breaks=c((0:30) * 20 ))
hist(ccs, breaks=c((0:60) * 10 ))
hist(ccs, breaks=c((0:120) * 5 ))
source('~/Desktop/University/95-summer/network-science/e.coli/coeffition.R')
hist(ccs
()
)
hist(ccs)
h2 = hist(ccs)
h2
source('~/Desktop/University/95-summer/network-science/e.coli/coeffition.R')
library(igraph)
source('~/Desktop/University/95-summer/network-science/e.coli/coeffition.R')
source('~/Desktop/University/95-summer/network-science/e.coli/coeffition.R')
plot(x=nns, y=ccs)
ccs = ccs / 2
plot(x=nns, y=ccs)
plot(x=log(nns), y=log(ccs))
nns
plot(x=log(nns), y=log(ccs), xlab="k", ylab="C(k)", main="Clustering Coeffiient for different degrees")
hist(ccs)
hist(ccs, breaks=((0:20) * 0.05))
hist(ccs
)
hist(ccs, xlab="C", main="Histogram of Clustering Coefficient")
hist(nns)
hist(log(nns))
hist(log(nns), nbreaks=20)
hist(log(nns), breaks=20)
hist(log(nns), breaks=10)
hist(log(nns), breaks=20)
mean(nns)
main(ccs)
mean(ccs)
ccs
ccp <- ccs[ccs != NaN]
ccp
ccp <- ccs[!ccs.is.na()]
ccp <- ccs[!is.na(ccs)]
ccp
mean ccp
mean(ccp)
